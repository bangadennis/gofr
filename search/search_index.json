{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>The Global Open Facility Registry (GOFR) lets health data administrators analyze, de-duplicate, and curate lists of facilities. It\u2019s helped health officials develop registries of all unique health facilities in a country by reconciling data sets maintained by multiple sources.</p> <p>Basic data such as name, location, and other attributes of health facilities are key to understanding health care delivery and facilitating a functioning health information system. However, many government organizations have multiple facility lists in various parts of the health system with conflicting or incomplete information. GOFR helps to reduce data redundancy, improve access to data, and allow anyone to align facility information across multiple software systems.</p> <p>Welcome!</p> <p>These are the docs for the next iteration of GOFR, which is based on the original codebase of the Facility Reconciliation Tool.</p> <p>Important</p> <p>The design document outlines the next steps in the creation of GOFR based on community feedback. If you have ZenHub installed, you may view the 2021 roadmap.</p>"},{"location":"#features","title":"Features","text":"<p>GOFR is a GUI on top of the popular and open source HAPI FHIR Server that makes it easier to manage lists of facilities, their hierarchies, services, and attributes. It supports:</p> <ul> <li>CSV, DHIS2, and FHIR servers as data sources.</li> <li>Nested lists, ie. facilities that are administrative hierarchies like state-&gt;county-&gt;hospital.</li> <li>An API and backend engine that use FHIR Location resources based on the mCSD profile.</li> <li>Modular system to extend algorithms for matching.</li> </ul> <p>Many new features in addition to the above are planned for completion in 2022.</p>"},{"location":"#contributing-and-community","title":"Contributing and community","text":"<ul> <li>For immediate support, join the #gofr channel on the iHRIS Slack team.</li> <li>For open monthly discussions, join the OpenHIE Facility Registry Community.</li> <li>Search through or create an issue.</li> </ul>"},{"location":"#license","title":"License","text":"<p>GOFR is distributed under the Apache 2.0 license.</p>"},{"location":"developer_guide/ansible/","title":"Ansible for Ubuntu","text":""},{"location":"developer_guide/ansible/#ansible-for-ubuntu","title":"Ansible for Ubuntu","text":""},{"location":"developer_guide/ansible/#requirements-and-versions","title":"Requirements and Versions","text":"<p>These steps are for installing on an Ubuntu system directly and requires experience with remote configuration and adherence to enterprise IT best practices which are out of scope for this document.</p> <p>These steps require</p> <ul> <li>An Ubuntu target, e.g. server, VM, or desktop. Ubuntu 22 is recommended and tested against.</li> <li>Python3 installed on the target host. This is default on Ubuntu 22.</li> <li>Python3 and Ansible installed on the controller that directs installation on target hosts, e.g. your laptop.</li> <li>On the controller, the gofr repository cloned and the terminal directory changed to /packaging/ansible</li> <li>To use the CLI tool, dialog must be installed (this is macOS/Linux only).</li> </ul> <p>The controller can be any macOS, Ubuntu, or Linux that has Python3 and Ansible installed. Windows users are recommended to use WSL to have a Linux interface. CentOS is no longer supported as a target host.</p> <p>Versions tested: * Ubuntu 22 * HAPI FHIR JPA Server tag: v6.0.1</p> <p>All versions of below are defaults on Ubuntu 22 * Python 3 * Tomcat9 * PostgreSQL 14 * Nodejs 12 * Java: openjdk 17 (HAPI requires 17 to build but 11 to run)</p>"},{"location":"developer_guide/ansible/#ansible-target-hosts","title":"Ansible Target Hosts","text":"<p>Hosts can be specified in inventory files or on the command line. Hosts may be specified on the command line (the comma is necessary even if there is only one host):</p> <pre><code>ansible-playbook -i 172.16.168.158, someplaybook.yaml\n</code></pre> <p>To use Ansible with an inventory file, you must create a file or edit the one in the repository. YAML and INI formats are supported.</p> <p>A <code>hosts</code> file that has an entry for one server and to also install on localhost would be (though you'll probably only do one of these):</p> <pre><code>[local]\nlocalhost ansible_connection=local\n\n[servers]\n172.16.174.137\n</code></pre> <p>Note that <code>[local] and [servers]</code> are not necessary, it is way to tag groups of servers. The file may simply contain an IP address or subdomain and DNS address.</p> <p>To use the hosts file:</p> <pre><code>ansible-playbook -i hosts &lt;someplaybook&gt;.yaml\n</code></pre>"},{"location":"developer_guide/ansible/#user-and-ssh-setup","title":"User and SSH setup","text":"<p>A example playbook is provided to show how to use Ansible to create a user (<code>gofr</code>) with sudo permissions on the target host. Another user can be used but they must have sudo permissions for installation.</p> <p>Make sure to include a public SSH key for the user who will install prerequisites.</p> <p>Create the <code>gofr</code> user and gives it sudo access:</p> <pre><code>ansible-playbook -i hosts user.yaml\n</code></pre> <p>As necessary, add additional ssh keys to the user. (This is done using the keys exposed in GitHub accounts, so first ensure that the user's public key is available on github, ie. visit https://github.com/.keys to use this script):</p> <pre><code>ansible-playbook -i hosts keys.yaml\n</code></pre> <p>Some small conveniences can be installed and configured: * https://github.com/magicmonty/bash-git-prompt</p> <pre><code>ansible-playbook -i hosts  nicetohave.yaml -e user=gofr\n</code></pre>"},{"location":"developer_guide/ansible/#installation","title":"Installation","text":"<p>Note: For the remainder of the playbooks, <code>-e user=gofr</code> is appended to the commands and must be changed if there's a different user being used on the target host.</p> <p>Prerequisites: git, redis, nodejs, native build pkgs for node, java, tomcat, maven:</p> <pre><code>ansible-playbook -i hosts prep.yaml -e user=gofr\n</code></pre> <p>Setup PostgreSQL.</p> <pre><code>ansible-playbook -i hosts postgres.yaml -e user=gofr -e pgpass=hapi\n</code></pre> <p>Build and install HAPI FHIR JPA Server and run with tomcat9.  * This playbook copies over the application.yaml. * tomcat9 looks for the default Java which isn't installed, rather 17 is installed. So, the script updates JAVA_HOME for tomcat9. * The DB name, user, and password defaults to <code>hapi</code>.  * Remove the last argument to change postgres password for the db to something else. This will also change the db password in the application.yaml file.</p> <pre><code>ansible-playbook -i hosts hapi.yaml -e user=gofr -e pgpass=hapi\n</code></pre> <p>Clone or git pull the latest GOFR app in $HOME/gofr</p> <pre><code>ansible-playbook -i hosts gofr.yaml -e user=gofr\n</code></pre> <p>Install the gofr service and load and start in systemd:</p> <pre><code>ansible-playbook -i hosts services.yaml -e user=gofr\n</code></pre>"},{"location":"developer_guide/ansible/#todo","title":"todo","text":"<ul> <li>nginx, apache, caddy etc for gofr</li> <li>encryption</li> <li>fix next error with permissions...</li> <li>make it work without keycloak, make it work with keycloak</li> </ul>"},{"location":"developer_guide/ansible/#troubleshooting","title":"Troubleshooting","text":"<p>Check that all processes are running and see the latest status:</p> <pre><code>ansible-playbook -i hosts troubleshoot.yaml -e user=gofr\n</code></pre> <p>Confirm HAPI is working from localhost:</p> <pre><code>curl http://localhost:8080/fhir/DEFAULT/metadata\n</code></pre> <p>Run GOFR manually.</p> <pre><code>cd $HOME/gofr/gofr-backend\napp__installed=${false} mCSD__server__protocal=http mCSD__server__host=localhost mCSD__server__port=8080 mCSD__server__basePath=fhir  app__idp=gofr npm start\n</code></pre>"},{"location":"developer_guide/ansible/#upgrades","title":"Upgrades","text":"<p>Rerunning the <code>install</code> playbook updates intrahealth/hearth and app repos on the remote server. Rerunning the <code>services.yaml</code> playbook updates services. Services are restarted (not just reloaded).</p> <p>The <code>install.yaml</code> playbook uses: * <code>git pull</code> to get the latest updates to the master branch. * <code>npm install</code> to update packages.</p>"},{"location":"developer_guide/ansible/#basic-status","title":"Basic status","text":"<pre><code>systemctl status postgresql@14-main\nsystemctl status redis\nsystemctl status gofr\n</code></pre>"},{"location":"developer_guide/ansible/#logs","title":"Logs","text":"<pre><code>journalctl -u tomcat9.service -b\njournalctl -u postgresql@14-main.service -b\njournalctl -u gofr.service -b\njournalctl -u redis.service -b\n</code></pre>"},{"location":"developer_guide/ansible/#restart-services","title":"Restart services","text":"<pre><code>sudo systemctl restart gofr.service\n</code></pre>"},{"location":"developer_guide/ansible/#restart-databases","title":"Restart databases","text":"<pre><code>sudo systemctl restart postgresql@14-main.service\nsudo systemctl restart redis.service\n</code></pre>"},{"location":"developer_guide/ansible/#networking","title":"Networking","text":"<p>Ensure processes are listening on the correct ports: See https://serverfault.com/questions/725262/what-causes-the-connection-refused-message</p> <pre><code># gui: 8080, backend: 3000, hearth: 3447, mongo: 27017, redis: 6379\nsudo netstat -tnlp | grep :8080\nsudo netstat -tnlp | grep :3000\nsudo netstat -tnlp | grep :3447\nsudo netstat -tnlp | grep :27017\nsudo netstat -tnlp | grep :6379\n</code></pre> <p>Check for firewall blocks. Rerun the gui and:</p> <pre><code>sudo tcpdump -n icmp \n</code></pre>"},{"location":"developer_guide/ansible/#do-not-use","title":"Do not use","text":"<p>Do not use these commands on production systems. This for troubleshooting the install scripts on servers without any data and trying migrations between versions.</p> <p>Delete the hapi db in postgres</p> <pre><code>sudo -u postgres psql postgres\npostgres=# drop database hapi;\nDROP DATABASE\npostgres=# \\q\n</code></pre>"},{"location":"developer_guide/ansible/#todo_1","title":"Todo","text":"<p>HAPI v6.0.1 error with GOFR accessing HAPI:</p> <pre><code>{\n\"severity\": \"error\",\n\"code\": \"processing\",\n\"diagnostics\": \"HAPI-0389: Failed to call access method: org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection\"\n}\n</code></pre>"},{"location":"developer_guide/architechture/","title":"GOFR Architechture","text":""},{"location":"developer_guide/architechture/#gofr-architechture","title":"GOFR Architechture","text":""},{"location":"developer_guide/forms/","title":"Customize with FSH","text":""},{"location":"developer_guide/forms/#customize-with-fsh","title":"Customize with FSH","text":"<p>Users may wish to customize the data entry forms. This can be done with </p> <p>form for a location</p> <p>The first section declares an Example (InstanceOf) will be created for GofrQuestionnaire.</p> <p>The second section defines a section of the form called 'Basic Details | uncategorized details'.</p> <p>The third section defines the field name 'Facility Name'.</p> <pre><code>Instance:       GofrFacilityQuestionnaire\nInstanceOf:     GofrQuestionnaire\nUsage:          #definition\n* title = \"Add Facility\"\n* description = \"GOFR Facility initial data entry questionnaire.\"\n* id = \"gofr-facility-questionnaire\"\n* url = \"http://gofr.org/fhir/Questionnaire/gofr-facility-questionnaire\"\n* name = \"gofr-facility-questionnaire\"\n* status = #active\n* date = 2021-04-24\n* purpose = \"Data entry page for facilities.\"\n\n* item[0].linkId = \"Location\"\n* item[0].definition = \"http://ihe.net/fhir/StructureDefinition/IHE.mCSD.FacilityLocation\"\n* item[0].text = \"Basic Details | uncategorized details\"\n* item[0].type = #group\n\n* item[0].item[0].linkId = \"Location.name\"\n* item[0].item[0].definition = \"http://ihe.net/fhir/StructureDefinition/IHE.mCSD.FacilityLocation#Location.name\"\n* item[0].item[0].text = \"Facility Name\"\n* item[0].item[0].type = #string\n* item[0].item[0].required = true\n* item[0].item[0].repeats = false\n</code></pre>"},{"location":"developer_guide/getting_started/","title":"Quickstart using Docker","text":""},{"location":"developer_guide/getting_started/#quickstart-using-docker","title":"Quickstart using Docker","text":"<p>Docker is a fast way to get up and running with testing and trying out GOFR.</p> <ul> <li>Ensure that Docker is installed, <code>docker version</code>, and running.</li> <li>Clone the GOFR repository.</li> </ul> <pre><code>git clone https://github.com/intrahealth/gofr.git\n# if using ssh\n# git@github.com:intrahealth/gofr.git\n</code></pre> <ul> <li>Docker Compose scripts are located in /instant/docker</li> </ul> <pre><code>cd instant/docker/run\n</code></pre> <p>Launch GOFR.</p> <pre><code>docker-compose up\n</code></pre>"},{"location":"developer_guide/gofr_installation/","title":"How to install GOFR","text":""},{"location":"developer_guide/gofr_installation/#how-to-install-gofr","title":"How to install GOFR","text":""},{"location":"developer_guide/gofr_installation/#gofr-installation","title":"GOFR Installation","text":""},{"location":"developer_guide/gofr_installation/#1-install-redis","title":"1. Install redis","text":"<pre><code>sudo apt install redis\n</code></pre>"},{"location":"developer_guide/gofr_installation/#2-install-tomcat","title":"2. Install tomcat","text":"<pre><code>sudo apt install tomcat9\n</code></pre>"},{"location":"developer_guide/gofr_installation/#3-install-postgres-version-93-or-above","title":"3.  Install postgres (version 9.3 or above)","text":""},{"location":"developer_guide/gofr_installation/#4-install-hapi-fhir","title":"4. Install HAPI FHIR","text":""},{"location":"developer_guide/gofr_installation/#a-create-database","title":"a) Create Database","text":"<pre><code>sudo -u postgres psql\ncreate database hapi;\ncreate user hapi with encrypted password 'PASS';\ngrant all privileges on database hapi to hapi;\n\\q\n</code></pre>"},{"location":"developer_guide/gofr_installation/#b-install-maven-to-compile-hapi","title":"b) Install maven to compile hapi","text":"<pre><code>sudo apt install maven\ngit clone &lt;https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git&gt;\ncd hapi-fhir-jpaserver-starter\n</code></pre> <p>Edit pom.xml and change the following line from hapi-fhir-jpaserver:</p> <pre><code>&lt;finalName&gt;hapi&lt;/finalName&gt;\n</code></pre> <p>Edit src/main/resources/application.yaml and change the following</p> <pre><code>spring.datasource.url=\u2019jdbc:postgresql://localhost:5432/hapi\u2019\nspring.datasource.username=\u2019hapi\u2019\nspring.datasource.password=\u2019PASS\u2019\nspring.datasource.driverClassName=\u2019org.postgresql.Driver\u2019\n</code></pre> <p>Uncomment below lines</p> <pre><code># hibernate.search.enabled: true\n\n# hibernate.search.backend.type: lucene\n\n# hibernate.search.backend.analysis.configurer: ca.uhn.fhir.jpa.search.HapiLuceneAnalysisConfigurer\n\n# hibernate.search.backend.directory.type: local-filesystem\n\n# hibernate.search.backend.directory.root: target/lucenefiles\n\n# hibernate.search.backend.lucene_version: lucene_current\n</code></pre> <p>auto_create_placeholder_reference_targets=true   hapi.fhir.enable_index_missing_fields=true   hapi.fhir.client_id_strategy=ANY</p> <p>Uncomment below lines</p> <pre><code># partitioning\n\n# allow_references_across_partitions: false\n\n# partitioning_include_in_search_hashes: false\n</code></pre> <p>Create war file</p> <pre><code> mvn clean install -DskipTests\n sudo mkdir /var/lib/tomcat9/target\n sudo chown tomcat:tomcat /var/lib/tomcat9/target\n sudo cp target/hapi.war /var/lib/tomcat9/webapps\n</code></pre>"},{"location":"developer_guide/gofr_installation/#c-load-basic-definitions","title":"c) Load Basic Definitions","text":"<p>Download and install hapi-fhir-cli:   here </p> <p>Load definitions with below commands ./hapi-fhir-cli upload-definitions -v r4 -t  here  </p>"},{"location":"developer_guide/gofr_installation/#5-keycloak-installation","title":"5. Keycloak Installation","text":"<p>!!! Important \"Install keycloak only if you want to use it as an identity provider.\"</p> <p>Follow instructions   here </p>"},{"location":"developer_guide/gofr_installation/#6-keycloak-configuration","title":"6. Keycloak Configuration","text":"<p>Modify keycloak base URL to keycloak/auth by changing web-context in standalone/configuration/standalone.xml to keycloak/auth.</p> <p>This will make keycloak accessible via http://localhost:8080/keycloak/auth</p> <p>Copy GOFR keycloak theme to keycloak</p> <pre><code> cp -r gofr/resources/keycloak/themes/gofr keycloak/themes/\n</code></pre> <p>Load GOFR keycloak realm</p> <p>Before loading the realm, make sure that Keycloak is running, if not running, please use below command to start it</p> <pre><code> bin/standalone.sh\n</code></pre> <p>To load the realm, first login to keycloak by running below command</p> <pre><code> ./kcadm.sh config credentials --server &lt;http://localhost:8080/keycloak/auth&gt; --realm master --user admin --password admin\n</code></pre> <p>where username and password refers to an admin account that has access to the master realm</p> <p>Now load the GOFR keycloak realm with below command</p> <pre><code> ./kcadm.sh create realms -f gofr/resources/keycloak/realm.json_\n</code></pre>"},{"location":"developer_guide/gofr_installation/#7-clone-gofr-github-repository","title":"7. Clone GOFR github repository","text":"<pre><code>git clone &lt;https://github.com/intrahealth/gofr.git&gt;\n</code></pre>"},{"location":"developer_guide/gofr_installation/#8-install-dependencies","title":"8. Install dependencies","text":"<pre><code>cd gofr/gofr-backend\nnpm install\n</code></pre>"},{"location":"developer_guide/gofr_installation/#9-running-gofr-in-production-mode","title":"9 Running GOFR in production mode","text":"<pre><code>cd gofr/gofr-backend/lib\nnode app.js\n</code></pre>"},{"location":"developer_guide/gofr_installation/#10-accessing-gofr","title":"10. Accessing GOFR","text":"<pre><code>&lt;http://localhost:4000&gt;\n</code></pre> <p>Install redis.</p> <pre><code>sudo apt install redis\n</code></pre> <p>Install tomcat.</p> <pre><code>sudo apt install tomcat9\n</code></pre> <p>Install postgres (version 9.3 or above)</p> <p>Install HAPI FHIR</p> <p>Create database</p> <pre><code>sudo -u postgres psql\ncreate database hapi;\ncreate user hapi with encrypted password 'PASS';\ngrant all privileges on database hapi to hapi;\n\\q\n</code></pre> <p>Install maven to compile hapi</p> <pre><code>sudo apt install maven\n</code></pre> <pre><code>git clone https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git\ncd hapi-fhir-jpaserver-starter\n</code></pre> <p>Edit pom.xml and change the following line from hapi-fhir-jpaserver:</p> <pre><code>&lt;finalName&gt;hapi&lt;/finalName&gt;\n</code></pre> <p>Edit src/main/resources/application.yaml and change the following</p> <pre><code>spring.datasource.url=\u2019jdbc:postgresql://localhost:5432/hapi\u2019\nspring.datasource.username=\u2019hapi\u2019\nspring.datasource.password=\u2019PASS\u2019\nspring.datasource.driverClassName=\u2019org.postgresql.Driver\u2019\n# Uncomment below lines\n# hibernate.search.enabled: true\n# hibernate.search.backend.type: lucene\n# hibernate.search.backend.analysis.configurer: ca.uhn.fhir.jpa.search.HapiLuceneAnalysisConfigurer\n# hibernate.search.backend.directory.type: local-filesystem\n# hibernate.search.backend.directory.root: target/lucenefiles\n# hibernate.search.backend.lucene_version: lucene_current\n\nauto_create_placeholder_reference_targets=true\nhapi.fhir.enable_index_missing_fields=true\nhapi.fhir.client_id_strategy=ANY\n# Uncomment below lines\n# partitioning:\n    # allow_references_across_partitions: false\n    # partitioning_include_in_search_hashes: false\n</code></pre> <p>Create war file</p> <pre><code>mvn clean install -DskipTests\nsudo mkdir /var/lib/tomcat9/target\nsudo chown tomcat:tomcat /var/lib/tomcat9/target\nsudo cp target/hapi.war /var/lib/tomcat9/webapps\n</code></pre> <p>Load Basic Definitions * Download and install hapi-fhir-cli: here https://hapifhir.io/hapi-fhir/docs/tools/hapi_fhir_cli.html * Load definitions with below commands <code>./hapi-fhir-cli upload-definitions -v r4 -t http://localhost:8080/hapi/fhir/</code></p>"},{"location":"developer_guide/gofr_installation/#introduction-to-key-cloak","title":"Introduction to Key Cloak","text":"<p>Keycloak is a single sign on solution for web apps such as the Global Open Facilities Registry system (GOFR) and other RESTful web services.</p> <p>The goal of Keycloak is to make security simple so that it is easy for application developers to secure the apps and services they have deployed in their organization.</p> <p>Security features that developers normally have to write for themselves are provided out of the box and are easily tailorable to the individual requirements of your organization.</p> <p>Keycloak provides customizable user interfaces for login, registration, administration, and account management.</p> <p>You can also use Keycloak as an integration platform to hook it into existing LDAP and Active Directory servers.</p> <p>You can also delegate authentication to third party identity providers like Facebook and Google.</p> <p>  For more information about Keycloak see   Developer guide </p>"},{"location":"developer_guide/gofr_installation/#setting-up-keycloak-for-gofr","title":"Setting up Keycloak for GOFR","text":"<p>The initial server configuration includes an administrator account assigned the  administrator role in keycloak by default.</p> <p>This account and password should be immediately changed after installation.</p> <p> Install keycloak only if you want to use it as an identity provider. Follow instructions here https://www.keycloak.org/docs/latest/getting_started/index.html#installing-the-server to install keycloak.</p> <p>Modify keycloak base URL to keycloak/auth by changing web-context in standalone/configuration/standalone.xml to keycloak/auth. </p> <p>This will make keycloak accessible via http://localhost:8080/keycloak/auth</p> <p>Copy GOFR keycloak theme to keycloak</p> <pre><code> cp -r gofr/resources/keycloak/themes/gofr keycloak/themes/\n</code></pre> <p>Load GOFR keycloak realm</p> <p>Before loading the realm, make sure that Keycloak is running, if not running, please use below command to start it</p> <pre><code> bin/standalone.sh\n</code></pre> <p>To load the realm, first login to keycloak by running below command where username and password refers to an admin account that has access to the master realm</p> <p>To load the realm, first login to keycloak by running below command </p> <pre><code> ./kcadm.sh config credentials --server &lt;http://localhost:8080/keycloak/auth&gt; --realm master --user admin --password admin\n</code></pre> <p>where username and password refers to an admin account that has access to the master realm</p> <p>Now load the GOFR keycloak realm with below command</p> <pre><code> ./kcadm.sh create realms -f gofr/resources/keycloak/realm.json_\n</code></pre> <p>Clone GOFR github repository</p> <pre><code>git clone https://github.com/intrahealth/gofr.git\n</code></pre> <p>Install dependencies</p> <pre><code>cd gofr/gofr-backend\nnpm install\n</code></pre> <p>Running GOFR in production mode</p> <pre><code>cd gofr/gofr-backend/lib\nnode app.js\n</code></pre> <p>Access GOFR at: http://localhost:4000</p>"},{"location":"developer_guide/gofr_installation/#running-gofr-in-development-mode","title":"Running GOFR in Development Mode","text":"<p>Install UI dependencies</p> <pre><code>cd gofr/gofr-gui\nnpm install\n</code></pre> <p>Start the UI</p> <pre><code>cd gofr/gofr-gui\nnpm run serve\n</code></pre> <p>Start the backend</p> <pre><code>cd gofr/gofr-backend/lib\nnode app.js\n</code></pre>"},{"location":"developer_guide/gofr_installation/#gofr-installation-using-ansible","title":"GOFR installation using Ansible","text":""},{"location":"developer_guide/gofr_installation/#install-ansible","title":"Install Ansible","text":""},{"location":"developer_guide/gofr_installation/#centos","title":"CentOS","text":"<p>To run gofr on CentOS you will need to run the commands below:</p> <pre><code>    sudo apt install epel-release\n</code></pre> <p>Then:</p> <pre><code>    sudo yum install epel-release\n</code></pre> <p>And finally:</p> <pre><code>    sudo yum install ansible\n</code></pre>"},{"location":"developer_guide/gofr_installation/#ubuntu","title":"Ubuntu","text":"<p>When using  Ubuntu :</p> <ol> <li> <p>Run the commands below:</p> <pre><code>sudo apt install Ansible\n</code></pre> </li> <li> <p>Edit /etc/ansible/hosts and add 127.0.0.1</p> </li> <li> <p>Install Ansible modules :</p> <pre><code>ansible-galaxy collection install ansible.utils\nansible-galaxy collection install community.postgresql\n</code></pre> </li> <li> <p>clone gofr with command:</p> <pre><code>git clone https://github.com/intrahealth/gofr.git\n</code></pre> </li> <li> <p>change dir to Ansible</p> <pre><code>cd gofr/packaging/ansible\n</code></pre> </li> </ol> <p>Depending on your operating system, change dir to the OS folder  i.e if you are using Ubuntu, change to ubuntu as below:</p> <pre><code>cd ubuntu\n</code></pre> <p>Start installation by executing the run.sh</p> <pre><code>sudo bash run.sh\n</code></pre>"},{"location":"developer_guide/load_query/","title":"API Usage","text":""},{"location":"developer_guide/load_query/#api-usage","title":"API Usage","text":"<p>GOFR provides a powerful API to access and load data. </p> <p>Users may access the API in general as they would all REST operations in FHIR. The base URL for API requests is simply the server:port for GOFR followed by <code>/fhir/&lt;PARTITION&gt;/</code>.</p> <p>For more information about using FHIR see the page <code>Working wth FHIR</code> in this guide.</p>"},{"location":"developer_guide/load_query/#public-demo-server","title":"Public Demo Server","text":"<p>The API routes are protected by token-based authentication and authorization.</p> <p>On sign-up, an administrator must provide the <code>client_secret</code> in addition to a username and password. The API user must obtain an  <code>access_token</code> and <code>refresh_token</code>. For example, using Curl on *nix and WSL, with the <code>demo:demo</code> account on the public test server the API user must POST the following information:</p> <pre><code>curl -XPOST https://app.facilitymatch.net/keycloak/auth/realms/GOFR/protocol/openid-connect/token \\\n--data \"grant_type=password\" \\\n--data \"username=demo\" \\\n--data \"password=demo\" \\\n--data \"client_id=gofr-api\" \\\n--data \"client_secret=df3dcc28-f79f-4df7-bd5c-427afe60a41b\"\n</code></pre> <p>Response (the tokens are abbreviated with '...'):</p> <pre><code>{\"access_token\":\"eyJhbGciOiJSUzI1NiIsInR5cCIgOi...\",\"expires_in\":300,\"refresh_expires_in\":1800,\"refresh_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI...\",\"token_type\":\"Bearer\",\"not-before-policy\":1632196935,\"session_state\":\"de2ba5ab-3ec5-404c-9e82-f0ca94b71ab6\",\"scope\":\"profile email\"}\n</code></pre> <p>For quick tests, it may be easier to capture the token in an environment variable using the excellent jq and then use that variable in queries, e.g.:</p> <pre><code>token=$(curl -XPOST https://app.facilitymatch.net/keycloak/auth/realms/GOFR/protocol/openid-connect/token \\\n--data \"grant_type=password\" \\\n--data \"username=demo\" \\\n--data \"password=demo\" \\\n--data \"client_id=gofr-api\" \\\n--data \"client_secret=df3dcc28-f79f-4df7-bd5c-427afe60a41b\" | jq -r '.access_token')\necho $token\ncurl -X GET \"https://app.facilitymatch.net/fhir/DEFAULT/Location\" -H \"Authorization: Bearer $token\"\n</code></pre> <p>The token can now be used to access the API.</p> <p>Note</p> <p>Token expiration may be shorter than anticipated. This can be changed in Keycloak.</p>"},{"location":"developer_guide/mcsd/","title":"Basics of mCSD","text":""},{"location":"developer_guide/mcsd/#basics-of-mcsd","title":"Basics of mCSD","text":"<p>A guiding tenant of the evolving FHIR standard is that 80% of interoperability use cases should be satisfied out-of-the-box by any combination of the more than 130 base resources. Profiles may be created from the base resources to address diverse use cases, such as domain-specific ones like oncology, specific deployments like a patient identity registry, and local requirements such as incorporating legal definitions of marital status and race into data dictionaries. A simple use case, like a case report, up to a large use case like adapting FHIR to an entire country healthcare system, may be profiled from the base FHIR resources. Aspects of consent, security, and privacy are also embodied in profiles. </p> <p>Integrating the Healthcare Enterprise (IHE) supports the open, consensus-driven development of profiles for FHIR resources and other healthcare specifications. The profiling of base resources for use cases are increasingly specified in machine-computable FHIR Implementation Guides (IGs). The terms 'profile' and 'implementation guide' may be used interchangeably, though profiles for FHIR are increasingly being specified in Implmentation Guides.</p> <p>The mCSD profile describes four entities and how they exchange information and work together. Here are the key takeaways about them.</p>"},{"location":"developer_guide/mcsd/#mcsd-facility-location-and-organization","title":"mCSD Facility (Location and Organization)","text":"<p>First, it is important to say that we often think of health facilities as a single concept, such as physical sites such as hospitals, clinics, health outposts, physician offices, etc. In this way of thinking, a facility has a unique identifier, geographic attributes (address, geocode), contact attributes, attributes regarding its hours of operation, etc. </p> <p>But, in FHIR there is no single facility resource, rather each Facility is defined by a pairing of FHIR Location and FHIR Organization. All of the attributes required can be included, but there is no 'Facility' FHIR resource.</p> <p>A mCSD facility is defined as a FHIR Location + FHIR Organization pair</p> <p>The key takeaway is that when thinking of a health facility, there no single FHIR resource, instead it is represented in FHIR as a Location and Organization resource pair. </p> <ul> <li>Location are physical places where care can be delivered such as facilities, buildings, wards, rooms, or vehicles. Locations also include political administrative units such as a village districts or regions. A Location has a unique identifier and may have geographic attributes (address, geocode), attributes etc. Each Location may be related to one Organization. A location may have a hierarchical relationship with other locations.</li> </ul> <p>Locations only relate to one organization</p> <p>The key takeaway is that a FHIR Location doesn't have enough details to describe the management side of the facility and that's where Organization comes in.</p> <ul> <li>Organization are \"umbrella\" entities; these may be considered the administrative bodies under whose auspices care services are provided such as Healthcare Information Exchanges (HIEs), Integrated Delivery Networks (IDNs), Non-Government Organizations (NGOs), Faith-Based Organizations (FBOs) or even a one-physician family practice. An organization has a unique identifier and may have additional administrative attributes such as contact person, mailing address, etc. Departments of an institution, or other administrative units, may be represented as child Organizations of a parent Organization.</li> </ul> <p>Organizations can have more than hierarchy, but not Locations</p> <p>Organizations are powerful representaions, they can have more than one hierarchy in mCSD. (This requires a mCSD extension to the core FHIR spec.)</p> <ul> <li> <p>OrganizationAffiliation describe non-hierarchical relationships, such as participation in a HIE.</p> </li> <li> <p>*mCSD Jurisdictions are also the pairing of a Location and Organization. However, they do not directly provide care, rather than are authoritative entities.</p> </li> </ul>"},{"location":"developer_guide/mcsd/#fhir-healthcare-services-and-practitioners","title":"FHIR Healthcare Services and Practitioners","text":"<ul> <li>HealthcareService \u2013 Each healthcare service has a unique identifier. Examples include surgical services, antenatal care services, or primary care services. The combination of a Healthcare Service offered at a Location may have specific attributes including contact person, hours of operation, etc. </li> </ul> <p>Think of health workers and the services they and the Locations providing them separately</p> <ul> <li>Practitioner are health workers; a Practitioner might be a physician, nurse, pharmacist, community health worker, district health manager, etc. Practitioners have contact and demographic attributes. Each Practitioner may be related to one or more Organizations, one or more Locations and one or more Healthcare Services.</li> </ul> <p>!!! tip \"Practitioners' skillsets (Practitioner Roles) and Practitioners themselves are separate.</p>"},{"location":"developer_guide/mcsd/#how-mcsd-entities-relate-to-one-another","title":"How mCSD entities relate to one another","text":"<p>The following graphic borrowed directly from the mCSD profile shows the relationships between entities.</p> <ul> <li>The concept of a facility is really a Location and an Organization.</li> <li>Organizations and Locations may be <code>partOf</code> other Locations and Organizations.</li> <li>Services are provided by Organizations but delivered at 'Facilities'.</li> <li>Practitioners and Locations have a <code>managingOrganization</code>.</li> </ul> <p></p>"},{"location":"developer_guide/server_administration/","title":"Configuration Parameters","text":""},{"location":"developer_guide/server_administration/#configuration-parameters","title":"Configuration Parameters","text":"<p>The following are the various configurations for GoFR</p> <p>a) app.installed</p> <p>Used to control when to load default data needed for GOFR to run, GOFR will set it to true when all data are loaded successfully.</p> <p>b) app.idp</p> <p>Controls which identity provider to use, gofr and keycloak are the only two supported values for this configuration. When gofr is the Value then GOFR will be used as an identity provider and wnen keycloak is the set value then GOFR will use Keycloak as an identity provider.</p> <p>c) Server.port</p> <p>This is the port number for which GOFR is listening to requests.</p> <p>d) mCSD.server</p> <p>This configuration stores credentials of a FHIR server, I.e protocol, host, port etc for which the FHIR server is accessible</p> <p>e) defaults.fields</p> <p>Set various fields types, this must be a path to a specific field</p>"},{"location":"developer_guide/working_with_fhir/","title":"Working with fhir","text":""},{"location":"developer_guide/working_with_fhir/#introduction-to-fhir","title":"Introduction to FHIR","text":"<p>The HL7\u00ae FHIR\u00ae (Fast Healthcare Interoperability Resources) standard defines how healthcare information can be exchanged between different systems. The FHIR standard defines data structures, termed 'resources' -- like Patient, Diagnostic Result, and Care Plan -- and how these resources can be exchanged using common Web protocols. </p> <p>FHIR describes both a REST API based on common requests/queries and more than 130 data structures. There are many resources for learning FHIR, and the basics are covered elsewhere. A hosted demo system can be used to increase your understanding of FHIR basics. </p> <p>FHIR Resource types are often capitalized to help identify them in text, e.g. Location, Organization, Practitioner, HealthcareService, and PractitionerRole.</p> <p>Some great resources for learning are:</p> <ul> <li>The HAPI FHIR Test Server The test server has a great web interface so you don't need to dig into a terminal to issues commmands. This is a great way to understand the REST API and the diverse types of resources.</li> <li>SmileCDR's Intro to FHIR. This is a video that explains the why and how of FHIR.</li> </ul>"},{"location":"developer_guide/working_with_fhir/#core-fhir-resources-in-mcsd","title":"Core FHIR Resources in mCSD","text":"<p>The below graphic shows the relevant FHIR resources for GOFR. </p> <p></p> <p>Locations are the physical places where care occurs. Organizations are managing entities of HealthcareServices, Locations, PractitionerRoles, and of other resources.</p> <p>The core FHIR resources provide a robust framework for linking patients with when, where, how, and why they receive care. For example, Healthcare Services resources possess <code>providedBy</code> and <code>location</code> references for the respective Organizations and Locations. A HealthcareService resource or Location can be queried using existing search methods to identify the services provided. OrganizationAffiliation is not depicted but can also be used in mCSD to describe a non-hierarchical relationship.</p> <p>Practitioner and PractitionerRole are separate resources. As noted in the FHIR R4 specification:</p> <p>\"Practitioner performs different roles within the same or even different organizations. Depending on jurisdiction and custom, it may be necessary to maintain a specific Practitioner Resource for each such role or have a single Practitioner with multiple roles. The role can be limited to a specific period, after which authorization for this role ends.\"</p>"},{"location":"developer_guide/working_with_fhir/#simple-fhir-json-example","title":"Simple FHIR JSON Example","text":"<p>As a simple introduction, consider the following snippet from here. Here are the key takeaways:</p> <ul> <li>Its <code>resourceType</code> is bundle, meaning it can contain multiple resources, and of different types. This bundle is of type collection, meaning it just for reference.</li> <li>It has two entries, meaning individual resources, both of <code>resourceType</code> is location.</li> <li>The bundle has an <code>id</code>, but so does each location resource.</li> <li><code>resource.partOf</code> links the two resources. Location/3 is part of Location/2. This is important. It nests the resources.</li> </ul> <pre><code>{\n  \"resourceType\": \"Bundle\",\n  \"id\": \"3ad0687e-f477-468c-afd5-fcc2bf897819\",\n  \"type\": \"collection\",\n  \"entry\": [\n    {\n      \"fullUrl\": \"http://hl7.org/fhir/Location/2\",\n      \"resource\": {\n        \"resourceType\": \"Location\",\n        \"id\": \"2\",\n        \"status\": \"active\",\n        \"name\": \"USSS Enterprise-D\",\n        \"mode\": \"instance\"\n      }\n    },\n    {\n      \"fullUrl\": \"http://hl7.org/fhir/Location/3\",\n      \"resource\": {\n        \"resourceType\": \"Location\",\n        \"id\": \"3\",\n        \"status\": \"active\",\n        \"name\": \"USSS Enterprise-D Sickbay\",\n        \"mode\": \"instance\",\n        \"partOf\": {\n          \"reference\": \"Location/2\",\n          \"display\": \"USS Enterprise\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"user_guide/configure_system/","title":"Configure System","text":""},{"location":"user_guide/configure_system/#configure-system","title":"Configure System","text":"<p>Under 'Configure System' the admin/ users of the system are able to set up some constraints for the system</p> <p>Under Configure System, we have user configurations as well as admin configurations in gofr.</p>"},{"location":"user_guide/configure_system/#user-configuration","title":"User Configuration","text":"<p>User Defined Headers</p> <p>This constraint is used to define which headers should be used, on uploading of a new data source</p> <p>Once a new data source is uploaded to the system, using a CSV or a remote source, the user can select to use the headers used in the source, or to use the system default headers.</p> <p></p> <p>Active Datasource for Facility Registry</p> <p>Users can select the datasource which will be active in the 'Facility Registry' module. By default, this data source is the same as the active data source for the user.</p> <p>To select -&gt; click on the drop- down and pick the preferred data source.</p> <p></p>"},{"location":"user_guide/configure_system/#admin-configurations","title":"Admin Configurations","text":"<p>The administrator configurations are done by the system admin of GOFR and affect all users in the system.</p>"},{"location":"user_guide/configure_system/#matching-configuration","title":"Matching configuration","text":"<p>While carrying out the matching process in Facility Reconciliation, there's an option to restrict matching to facilities with the same parent.</p> <p></p> <p>Once the Perform match based on parent constraint option is activated, this means, the parent of the facilities must be the same for matching to occur. If deselected, facilities with different parents can also be matched.</p> <p>If the  Perform match based on constraint is activated, the user can choose to:</p> <ul> <li>Automatch by ID - Use the ID to match the facilities</li> <li>Automatch by name - Use the facility name(s) to match facilities</li> </ul>"},{"location":"user_guide/configure_system/#dataset-configuration","title":"Dataset configuration","text":"<p>There are a few options for datasets which should be set up. They include:</p> <p>Choose how datasets can be added in the system </p> <p>The admin can restrict the data sources to be used in the system by selecting from the list. To make a source unavailable for use, simple uncheck the respective box from the list provided.</p> <p></p> <p>Allow sharing of datasets to all users by non-admins</p> <p>Users without admin permissions can be allowed to share a datasource to 'all users' by selecting this option.</p> <p></p> <p>Sharing of a datasource by admins is allowed by default.</p> <p>Select a datasource to serve as Source 2 for all reconciliation</p> <p>Once this option is selected, reconciliation can only be done against the source which is selected under this option. This restricts users from carrying out reconciliation and matching against other data sources in the system.</p> <p></p> <p>Single data source per user</p> <p>Once activated, this restricts users to only one data source.</p> <p></p>"},{"location":"user_guide/configure_system/#gofr-authentication","title":"GOFR Authentication","text":"<p>Once activated, this </p>"},{"location":"user_guide/configure_system/#self-registration","title":"Self Registration","text":"<p>There are two options available.Once activated:</p> <ul> <li>Enable Self Registration- Allows new users to register and create their own accounts on gofr</li> <li>Require Admin Approval of Self Registration - Requires the admin to approve all accounts created on gofr through self registration.</li> </ul>"},{"location":"user_guide/configure_system/#public-access","title":"Public Access","text":"<p>The admin can activate public access and select the partition which will be accessible by the public users of gofr.</p>"},{"location":"user_guide/configure_system/#cron-jobs","title":"Cron Jobs","text":"<p>GOFR gives users ability to automatically sync data from remote datasets by enabling cron jobs and selecting the time the synchronization takes place.</p> <p></p>"},{"location":"user_guide/configure_system/#email-configuration","title":"Email configuration","text":"<p>SMTP configurations for email notifications are captured here.</p> <p></p>"},{"location":"user_guide/data_sources/","title":"Data sources","text":""},{"location":"user_guide/data_sources/#data-sources","title":"Data sources","text":""},{"location":"user_guide/data_sources/#add-data-sources","title":"Add Data Sources","text":"<p>GOFR supports various data sources including:</p> <ul> <li>CSV as a file source,</li> <li>Remote connections to DHIS2 and FHIR servers.</li> <li>Blank Sources</li> </ul> <p>The following table displays the various fields required for each source to be added:</p> <p></p> <p>To add a data source in GOFR :</p> <p>On the Navigation pane,select Data Sources -&gt; Select Add Data Source -&gt;</p> <p></p>"},{"location":"user_guide/data_sources/#upload-csv","title":"Upload CSV","text":"<p>In order to successfully upload a CSV file into GOFR</p> <ul> <li>The CSV file should have headers (column names) on  the first row of the file. </li> <li> <p>Empty lines should be removed.</p> </li> <li> <p>The CSV file should be encoded as Unicode (utf-8) as that is what is used internally in the backend.</p> </li> </ul> <p>If some entities are encoded in another format then matches that appear to be the same may not match as expected.</p> <p>Latitude and longitude are optional columns. If they are included they will be used to facilitate manual matching but they are not used or required for automatic matching.</p> <p>To upload a CSV:</p> <p>Select Data Sources -&gt; Add Data Sources -&gt; Select Upload CSV -&gt; Select a file and enter the file name -&gt; Continue</p> <p></p> <p></p> <p>The next step entails mapping the headers on the CSV file uploaded against the headers in the GOFR system:</p> <p>Match Headers</p> <p>Select the matching headers -&gt; Click upload</p> <p></p> <p>The user may choose any levels in their hierarchy to include but they must be ordered with the top most level first.</p> <p>Click on the + button to add more levels and map them to the appropriate levels in the app -&gt; Upload</p> <p>Ensure that all the column levels selected have data for all the facilities.</p> <p>The CSV file will not be uploaded in case of missing data.</p> <p>It is also possible to select no levels to match on a flat list with no hierarchy. To do so, don\u2019t select levels.</p> <p>On uploading, the following warning appears:</p> <p></p> <p>Click Proceed to continue uploading or click Cancel, to discard.</p>"},{"location":"user_guide/data_sources/#remote-data-source","title":"Remote Data Source","text":"<p>GOFR supports remote sources of data. Any DHIS2 or FHIR server can be used as a source if the user has credentials to access it.</p> <p>Extensive compatibility testing has not been performed but DHIS2 versions &gt;=2.22 should be supported. Please contact the maintainers if there is an issue.</p> <p>FHIR is supported for STU3 and R4 support is anticipated.</p> <p>To add a remote data source:</p> <p>Select Remote Source -&gt; Fill in the source type -&gt; Source name -&gt; Base url -&gt; Username -&gt; Password -&gt; Click Add</p> <p></p> <p>After adding a remote source, users MUST run the synchronization so that the data can be pulled.</p> <p>This is done in the View data sources feature.</p> <p>View data sources -&gt; remote sources -&gt; select the data source and click on 'Force full sync'.</p>"},{"location":"user_guide/data_sources/#blank-source","title":"Blank Source","text":"<p>Blank data sources can also be added. A blank data source can be manually populated with data by activating it on the dashboard and using the facility registry functionality to populate its contents</p> <p>To add a blank source:</p> <p>Select Blank Source -&gt; Add the name of the source -&gt; Click Add</p> <p></p> <p></p> <p>Once uploaded, you can view all the uploaded sources under View Data Sources .</p> <p></p>"},{"location":"user_guide/data_sources/#force-full-sync","title":"Force full Sync","text":"<p>Force full sync allows full synchronization of all the data from the remote source.All the data from the remote source is added.This should be done the first time a remote source is added, in order to populate data into the newly added source.</p>"},{"location":"user_guide/data_sources/#sync-update","title":"Sync Update","text":"<p>Sync Update only pulls new changes from the remote source, since the last synchronization was done. This means that any changes done in the system on the source are not overwritten by the synchronization.</p> <p>CSV entries can be edited. Any edits do not modify the original data source but the edits will be exported after reconciliation.</p>"},{"location":"user_guide/facility_reconciliation/","title":"Facility Reconciliation","text":""},{"location":"user_guide/facility_reconciliation/#facility-reconciliation","title":"Facility Reconciliation","text":"<p>What is the Facility Reconciliation?</p> <p>Facility Reconciliation reconciles data sources, which usually involves choosing a pair of sources to work with and then running the automatic or manual matching tool.</p> <p>Reconcile</p> <p>Reconciling data sources involves choosing a pair of sources to work with and then running the automatic reconcile or manual matching in GOFR. Any kind of match can be undone.</p>"},{"location":"user_guide/facility_reconciliation/#create-and-manage-data-source-pair","title":"Create and Manage Data Source Pair","text":"<p>To match/reconcile two data sources, you first need to create a data source pair. The source on the left (source 1) is the leader \u2013 the source of truth. The source on the right is the follower, the source that is meant to be cleaned.</p> <p>To create a data source pair, On the Reconcile tab -&gt; Select Create and Manage Data Source Pair page.</p> <p></p> <p>On the pair tab select one source on the left and one on the right.</p> <p>In the pairing process it is possible to share the pair with another user who may join in helping to match, for example in a situation where they are familiar with a specific area.</p>"},{"location":"user_guide/facility_reconciliation/#automatic-reconcile","title":"Automatic Reconcile","text":"<p>When the reconciliation process starts it uses automatic matching. Matching proceeds like this:</p> <p>  The first level matches the highest administrative area names (termed region in GOFR) using the   Levenshtein distance. </p> <p></p> <p>The second level matches based on the first level and also the Levenshtein distance for the second level names, termed district in GOFR.</p> <p></p> <p>The final level matches based on the previous level (which was already matched according to the level above it) as well as the Levenshtein distance.</p> <p></p> <p>There is a detailed explanation of the processes:</p> <p></p>"},{"location":"user_guide/facility_reconciliation/#recalculate-scores","title":"Recalculate Scores","text":"<p>During the matching process at any level, it is possible to match unmatched entities using the Recalculate Scores button. This process does not remove matches.</p> <p></p> <p>One common use for this is after manual matching of any entities, to rerun the matching process and incorporate the results. This can also be used when an entity is is freed for matching after having been previously flagged.</p>"},{"location":"user_guide/facility_reconciliation/#manual-matching","title":"Manual Matching","text":"<p>In GOFR, there is the option of manual matching of facilities where the user manually matches facilities</p> <p>  Manual matching brings up a dialog box to choose options. If latitude and longitude coordinates were provided in the data sources, it additionally scores matches based on the  haversine formula for shortest path across a sphere (geodesic distance) between the points </p> <p>This is not used in the automatic matching but is provided for manual matching.</p> <p>Any administrative area or facility match may be broken. If this is desired, click Recalculate Scores to rebuild the scoring index and manually match or flag as desired.</p>"},{"location":"user_guide/facility_reconciliation/#parent-constraints","title":"Parent constraints","text":"<p>The default is to match facilities between sources based on hierarchies only. This means that if a facility is in the wrong nested administrative level, it will not be matched.</p> <p>Under the Configure System tab the parent constraint can be disabled to allow for matching of all facilities across the sources.</p> <p></p>"},{"location":"user_guide/facility_reconciliation/#reconcile-without-levels","title":"Reconcile without levels","text":"<p>It is possible to match facilities from a flat list with no hierarchies.</p>"},{"location":"user_guide/facility_reconciliation/#notifications","title":"Notifications","text":"<p>When admins share a set of facilities for matching to a data manager, the data manager is notified by email when the matching is completed.</p>"},{"location":"user_guide/facility_reconciliation/#flagging","title":"Flagging","text":"<p>Flagging allows for an export of facilities that require further examination and research. When a flag is set, the user may also include a comment.</p> <p>Flags may be set on any entity. For example, an organizational unit or a facility.</p> <p>In order to see flagged items and their comments click the FLAGGED tab on the bottom of the RECONCILE menu for the level of interest. In this example, an org unit is flagged.</p> <p></p> <p>Also in this example, once flagged, a facility or administrative unit may be released back for matching to another entity, or the match that was flagged may be confirmed.</p>"},{"location":"user_guide/facility_registry/","title":"Facility Registry","text":""},{"location":"user_guide/facility_registry/#facility-registry","title":"Facility Registry","text":"<p>What is the Facility Registry?</p> <p>The Facility Registry Module is a central repository of information on all the facilities and healthcare services information in a particular jurisdiction e.g.(country,region etc.)</p> <p>The various features on this module include:</p> <ul> <li>Adding/ Registering new facilities, organizations, services, jurisdictions</li> <li>Updating existing facilities, organizations, services, jurisdictions facility details</li> <li>Approving requests to add new facility and update facility details</li> </ul>"},{"location":"user_guide/facility_registry/#jurisdictions","title":"Jurisdictions","text":"<p>Jurisdictions in GOFR refer to geographical locations. </p> <p>Level 1 jurisdictions refer to highest geographical definition e.g. If a country is divided into regions, the regions divided into provinces, and provinces into districts, then in this country, the level 1 jurisdiction is the region, province is level 2 and district is level 3 jurisdiction.</p>"},{"location":"user_guide/facility_registry/#add-jurisdiction","title":"Add Jurisdiction","text":""},{"location":"user_guide/facility_registry/#search-jurisdiction","title":"Search Jurisdiction","text":"<p>This feature allows users to search for a jurisdiction by name, type and parent. </p>"},{"location":"user_guide/facility_registry/#facility","title":"Facility","text":"<p>This feature allows users to add new facilities in the system</p>"},{"location":"user_guide/facility_registry/#add-facility","title":"Add Facility","text":""},{"location":"user_guide/facility_registry/#search-facility","title":"Search Facility","text":"<p>This feature allows users to view various facilities and search for facilities using the name, type and physical type filters.</p> <p></p>"},{"location":"user_guide/facility_registry/#service","title":"Service","text":""},{"location":"user_guide/facility_registry/#add-service","title":"Add Service","text":""},{"location":"user_guide/facility_registry/#search-service","title":"Search Service","text":""},{"location":"user_guide/facility_registry/#organization","title":"Organization","text":""},{"location":"user_guide/facility_registry/#add-organization","title":"Add Organization","text":"<p>This feature allows users to add an organization to the system.</p> <p></p>"},{"location":"user_guide/facility_registry/#search-organization","title":"Search Organization","text":""},{"location":"user_guide/facility_registry/#requests","title":"Requests","text":""},{"location":"user_guide/facility_registry/#add-request","title":"Add Request","text":""},{"location":"user_guide/facility_registry/#search-facility-update-request","title":"Search Facility Update Request","text":""},{"location":"user_guide/facility_registry/#search-add-facility-request","title":"Search Add Facility Request","text":""},{"location":"user_guide/introduction/","title":"Introduction","text":""},{"location":"user_guide/introduction/#introduction","title":"Introduction","text":"<p>What is GOFR?</p> <p>GOFR is acronym for the Global Open Facility Registry.</p> <p>GOFR is a shared repository for facility information. The information in the repository can vary and may include:</p> <p>- Facilities</p> <p>- Jurisdictions such as districts, regions, county, country , with the highest in the hierarchy being a country and the lowest being a facility.</p> <p>- Services offered by facilities. This may include services such as malaria testing, HIV care, clinical information like vaccination</p> <p>- Organizations that manage facilities</p> <p>Also, GOFR is an open-source system which is is easy to install and can be easily configured to meet user needs through the administration console.</p>"},{"location":"user_guide/introduction/#log-in","title":"Log In","text":"<p>In order to access GOFR, type the gofr url (web address) into the address bar of any browser.</p> <p>A sample login screen is shown in the figure below.</p> <p></p> <p>The email address and the user password are required to login to the system. On clicking the Login button, the details entered are validated and one is allowed access if the details are correct. Otherwise, access is denied.</p>"},{"location":"user_guide/introduction/#reset-password","title":"Reset Password","text":"<p>To reset your password, Click -&gt; Forgot Password -&gt; Submit</p> <p>A link will be sent via the associated email address to allow you to reset your password.</p> <p></p> <p>Click the 'Back to Login' link and log in normally.</p>"},{"location":"user_guide/introduction/#dashboard","title":"Dashboard","text":"<p>Once you successfully log in to the system, the dashboard appears:</p> <p></p> <p>Active partition - A partition selected under 'Active Partition' becomes the active partition for the entire system e.g.when searching for a facilities/jurisdictions/organizations, the system will search facilities in the active partition.</p> <p>There are various features on the dashboard  including:</p>"},{"location":"user_guide/introduction/#active-partition","title":"Active Partition","text":"<p>Data is loaded into a partition. Users may have access to one or many partitions, some of which they may own or be able to share. Admins may view all partitions.</p> <p>To know what partition you are on, see the list on the top left, which allows switching partitions.</p> <p>To change partitions, click on the drop down and select the preferred partition.</p> <p></p>"},{"location":"user_guide/introduction/#active-partition-stats","title":"Active Partition Stats","text":"<p>There are summary statistics that show usage and other aspects of the current partition.</p> <p></p>"},{"location":"user_guide/introduction/#active-reconciliation-pair","title":"Active Reconciliation Pair","text":"<p>This shows the pair of data sources which have been activated.</p> <p></p>"},{"location":"user_guide/introduction/#language","title":"Language","text":"<p>This feature allows users to select the language to be used in the system among the various options listed.</p> <p></p> <p>To change the language, click on the check box of the preffered language as indicated above.</p>"},{"location":"user_guide/introduction/#map-visualization","title":"Map Visualization","text":"<p>Map visualization displays the facilities in the active partition on a map</p> <p></p>"},{"location":"user_guide/introduction/#tabular-visualization","title":"Tabular Visualization","text":"<p>Tabular Visualization displays the facilities in the active partition in a list/ tabular form</p>"},{"location":"user_guide/introduction/#log-out","title":"Log Out","text":"<p>To log out of the GOFR system: Browse to the upper right corner on any page, click Log Out.</p> <p></p> <p>The Welcome page appears. You will have to re-enter your username and password to regain access to the system.</p>"},{"location":"user_guide/partitions/","title":"Partitions","text":""},{"location":"user_guide/partitions/#partitions","title":"Partitions","text":"<p>What is a Partition?</p> <p>A partition in GOFR refers to a data set that is stored separately from other sources and can be accessed and analysed individually.</p> <p>Since GOFR allows the use of multiple data sources, partitioning ensures the integrity of each data set, while also allowing the merging of different datasets to create new data sets i.e new partitions</p> <p>Data in gofr is loaded into a partition. Users may have access to one or many partitions, some of which they may own or be able to share. Admins may view all partitions.</p> <p>To know what partition you are on, see the list on the top left, which allows switching partitions.</p>"},{"location":"user_guide/partitions/#how-are-partitions-created-in-gofr","title":"How are partitions created in GOFR?","text":"<p>There are various ways of creating partitions in GOFR. They include:</p> <ol> <li> <p>Uploading a CSV- Uploading a CSV with relevant facility data into GOFR creates a partition with the data contained in the CSV</p> </li> <li> <p>Using a Remote Source -If a user has credentials to access a DHIS2 or FHIR server, they can use it as a remote data source to populate data into GOFR, thereby creating a new partition</p> </li> <li> <p>Using a  Blank Source- A partition can be created by addins a blank data source which is thereafter manually populated with data by activating it on the dashboard and use the facility registry functionality to populate its contents.</p> </li> <li> <p>Merging two data sources - Using the Facility Reconciliation tool, once two data sources are merged, a new partition is created in GOFR (data source pair), thereby allowing for manipulation / analysis of the partition as a new partition.</p> </li> </ol>"},{"location":"user_guide/partitions/#key-points-to-note-about-partitions","title":"Key points to note about partitions","text":""},{"location":"user_guide/partitions/#user-specific","title":"User specific","text":"<p>The creator of a data source is the default owner of the partition.The creator has full view, add/update and delete rights on the partition and has the options to share and revoke rights to the partition at will.</p>"},{"location":"user_guide/partitions/#shareable","title":"Shareable","text":"<p>Once a partition is created, the creator (owner)can share it to other users who can collaborate/ add more info/ use the partition. </p>"},{"location":"user_guide/partitions/#permissions","title":"Permissions","text":""},{"location":"user_guide/partitions/#issuing-rights","title":"Issuing rights","text":"<p>The creator gives the rights to view, add/update the facilities, organizations, health services and jurisdictions at the point of sharing it with other users. A user can only share a partition which they own.</p>"},{"location":"user_guide/partitions/#revoking-rights","title":"Revoking rights","text":"<p>Permissions can also be revoked. The user can at any time revoke a specific permission/all permissions to any user they may have given the rights to at will.</p>"},{"location":"user_guide/partitions/#deleting-a-partition","title":"Deleting a partition","text":"<p>A partition can only be deleted by the creator. A user cannot delete a partition shared to them by another user. A deleted partition is deleted for all users and it is no longer available in the system</p> <p> Deleting a partition will not delete the data pairs created using that partition. </p>"},{"location":"user_guide/partitions/#active-partition","title":"Active Partition","text":"<p>The active partition in GOFR is the partition which is in active use for a particular user in the system. This means that the visualizations,stats, the lists of facilities, organizations and services etc. displayed are those of the active partition for a particular user.</p> <p>Once a different active partition is chosen, the information displayed automatically changes to the data contained in the chosen partition.</p> <p>A user can change the active partitition by selecting a partition from the list of partitions he/she has access to in the system.</p>"},{"location":"user_guide/partitions/#public-partition","title":"Public Partition","text":"<p>The public partition refers to the partition which is shared to/viewed by the public. This partition is tied to a user with limited viewing only rights.</p> <p>The public partition is activated by the system administator under the 'Configure system' tab.</p>"},{"location":"user_guide/partitions/#partition-sharing","title":"Partition Sharing","text":"<p>A partition owner(the creator of the partition) can share it with one or all other users, and assign specific permissions i.e.</p> <ul> <li>View Facilities</li> <li>View Jurisdictions</li> <li>View Health Care services</li> <li>View Organization</li> <li>Update Facilities</li> <li>Update Jurisdictions</li> <li>Update Health Care services</li> <li>Update Organizations</li> </ul> <p>To share a partition, </p> <p>Once a partition is shared to another user, that user can be able to access the partition subject to the permissions shared. The user can also be able to carry out reconciliation on the shared partition.</p>"},{"location":"user_guide/user_management/","title":"User Management","text":""},{"location":"user_guide/user_management/#user-management","title":"User Management","text":"<p>User management is the module which enables the effective management of users by assigning the necessary roles and tasks to be carried out.</p>"},{"location":"user_guide/user_management/#overview","title":"Overview","text":"<p>How do you manage users in gofr?</p> <p>In order to manage  user access in gofr, you need to access the Keycloak Administration Console. This should only be accessed by the system's Administrator.</p> <p></p> <p>From the Admin Console, you have a wide range of actions you can perform to manage users. </p>"},{"location":"user_guide/user_management/#administrator-roles","title":"Administrator Roles","text":""},{"location":"user_guide/user_management/#managing-user-roles","title":"Managing User Roles","text":"<p>There are three types of user roles in gofr. They are:</p> <ul> <li>Admin role</li> <li>Data manager role</li> <li>Open role</li> </ul> <p>The initial server configuration includes an administrator role.</p> <p>This account and password should be immediately changed after installation. See the Developer Guide for more information.</p> <p>Accounts assigned the admin role can add users, configure the system, and  undertake all the tasks of data managers. Data manager accounts are limited to only managing data. They can share data sources and do other matching tasks. Custom accounts with specific roles may be created in the future.</p> <p>PS: Please let the community know if you have use cases for custom account roles.</p>"},{"location":"user_guide/user_management/#searching-for-a-user","title":"Searching for a user","text":"<p>Search for a user to view detailed information about the user, such as the user\u2019s groups and roles.</p> <p>Procedure</p> <ol> <li>Click Users in the main menu. This Users page is displayed.</li> <li>Type the full name, last name, first name, or email address of the user you want to search for in the search box. The search returns all users who match your criteria.</li> </ol>"},{"location":"user_guide/user_management/#view-all-users","title":"View All Users","text":"<p>To view all the users in gofr,click View all users to list every user in the system.</p>"},{"location":"user_guide/user_management/#creating-a-user","title":"Creating a user","text":"<p>To create a new user -&gt;</p> <ol> <li>Click Users in the menu.</li> <li>Click Add User.</li> <li>Enter the details for the new user.</li> <li>Click Save. After saving the details, the Management page for the new user is displayed.</li> </ol> <p>Username is the only required field</p>"},{"location":"user_guide/user_management/#deleting-a-user","title":"Deleting a user","text":"<p>You can delete a user, who no longer needs access to gofr. If a user is deleted, the user profile and data is also deleted.</p> <p>To delete a user -&gt;</p> <ol> <li>Click Users in the menu. The Users page is displayed.</li> <li>Click View all users to find a user to delete.</li> </ol> <p></p> <p>~~ Alternatively, you can use the search bar to find a user.~~</p> <ol> <li>Click the 'Delete' :delete: icon next to the user you want to remove and confirm deletion.</li> </ol>"},{"location":"user_guide/user_management/#credentials-management","title":"Credentials management","text":"<p>The credentials managment tab allows the adminstrator to configure the password, profile(s), email (s) and user locales of the various users of gofr.</p> <p></p> <p>The following fields are included:</p>"},{"location":"user_guide/user_management/#position","title":"Position","text":"<p>The arrow buttons in the Position column allow you to shift the priority of the credential for the user. The topmost credential has the highest priority. The priority determines which credential is displayed first after a user logs in. The default priority is 'password'.</p>"},{"location":"user_guide/user_management/#type","title":"Type","text":"<p>This column displays the type of credential, i.e. password or OTP.</p>"},{"location":"user_guide/user_management/#user-label","title":"User Label","text":"<p>This is an assignable label to recognize the credential when presented as a selection option during login. It can be set to any value to describe the credential.</p>"},{"location":"user_guide/user_management/#data","title":"Data","text":"<p>This is the non-confidential technical information about the credential. It is hidden, by default. You can click Show data\u2026 to display the data for a credential.</p>"},{"location":"user_guide/user_management/#actions","title":"Actions","text":"<p>This column has two actions:</p> <ul> <li> <p>Click Save to record the value or the user field.</p> </li> <li> <p>Click Delete to remove the credential.</p> </li> </ul> <p>You cannot configure other types of credentials for a specific user in the admin console; that task is the user\u2019s responsibility.</p> <p>You can however, delete the credentials of a user in the event a user loses an OTP device or if credentials have been compromised. You can only delete credentials of a user in the Credentials tab.\"</p>"},{"location":"user_guide/user_management/#setting-a-password-for-a-user","title":"Setting a password for a user","text":"<p>If a user does not have a password, or if the password has been deleted, the Set Password section is displayed. If a user already has a password, it can be reset in the Reset Password section.</p> <p>Procedure</p> <ol> <li>Click Users in the menu. The Users page is displayed.</li> <li>Select a user.</li> <li>Click the Credentials tab.</li> <li>Type a new password in the Set Password section.</li> <li>Click Set Password.</li> </ol> <p>If Temporary is ON, the user must change the password at the first login. To allow users to keep the password supplied, set Temporary to OFF. The user must click Set Password to change the password.</p> <ol> <li>Alternatively, you can send an email to the user that requests the user reset the password.</li> </ol> <p>a. Navigate to the Reset Actions list under Credential Reset. b. Select Update Password from the list. c. Click Send Email. The sent email contains a link that directs the user to the Update Password window. d. Optionally, you can set the validity of the email link. This is set to the default preset in the Tokens tab in Realm Settings.</p>"},{"location":"user_guide/user_management/#creating-a-one-time-password-otp","title":"Creating a One Time Password (OTP)","text":"<p>If OTP is conditional in your realm, the user must navigate to Keycloak Account Console to reconfigure a new OTP generator. If OTP is required, then the user must reconfigure a new OTP generator when logging in.</p> <p>Alternatively, you can send an email to the user that requests the user reset the OTP generator. The following procedure also applies if the user already has an OTP credential.</p>"},{"location":"user_guide/user_management/#procedure","title":"Procedure","text":"<ol> <li>Click Users in the main menu. The Users page is displayed.</li> <li>Select a user.</li> <li>Click the Credentials tab.</li> <li>Navigate to the Reset Actions list.</li> <li>Click Configure OTP.</li> <li>Click Send Email. The sent email contains a link that directs the user to the OTP setup page.</li> </ol>"},{"location":"user_guide/user_management/#required-actions","title":"Required actions","text":"<p>You can set the actions that a user must perform at the first login. These actions are required after the user provides credentials. After the first login, these actions are no longer required. You add required actions on the Details tab of that user.</p> <p>The following are examples of required action types:</p>"},{"location":"user_guide/user_management/#update-password","title":"Update Password","text":"<p>The user must change their password, once they log in.</p>"},{"location":"user_guide/user_management/#configure-otp","title":"Configure OTP","text":"<p>The user must configure a one-time password generator on their mobile device using either the Free OTP or Google Authenticator application.</p>"},{"location":"user_guide/user_management/#verify-email","title":"Verify Email","text":"<p>The user must verify their email account. An email will be sent to the user with a validation link that they must click. Once this workflow is successfully completed, the user will be allowed to log in.</p>"},{"location":"user_guide/user_management/#update-profile","title":"Update Profile","text":"<p>The user must update profile information, such as name, address, email, and phone number.</p>"},{"location":"user_guide/user_management/#setting-required-actions-for-one-user","title":"Setting required actions for one user","text":"<p>You can set the actions that are required for any user. To set actions required for a user -&gt;</p> <ol> <li>Click Users in the menu.</li> <li>Select a user from the list.</li> <li> <p>Navigate to the Required User Actions list.</p> </li> <li> <p>Select all the actions you want to add to the account.</p> </li> <li>Click the X next to the action name to remove it.</li> <li>Click Save after you select which actions to add.</li> </ol>"},{"location":"user_guide/user_management/#setting-required-actions-for-all-new-users","title":"Setting required actions for all new users","text":"<p>You can specify what actions are required before the first login of all new users. The requirements apply to a user created by the Add User button on the Users page or the Register link on the login page.</p> <p>To set a required action for all new users-&gt;</p> <ol> <li>Click Authentication in the menu.</li> <li>Click the Required Actions tab.</li> <li>Click the checkbox in the Default Action column for one or more required actions. When a new user logs in for the first time, the selected actions must be executed.</li> </ol>"},{"location":"user_guide/user_management/#enabling-terms-and-conditions-as-a-required-action","title":"Enabling terms and conditions as a required action","text":"<p>You can enable a required action that new users must accept the terms and conditions before logging in to Keycloak for the first time. To enable -&gt;</p> <ol> <li>Click Authentication in the menu.</li> <li>Click the Required Actions tab.</li> <li>Enable the Terms and Conditions action.</li> <li>Edit the terms.ftl file in the base login theme.</li> </ol>"},{"location":"user_guide/user_management/#self-registration","title":"Self-registration","text":"<p>Administrators may configure the system to allow for anyone to self-register. This is under the Configure System tab. This option is off by default.</p> <p>To enable users to self-register-&gt;</p> <ol> <li>Click Realm Settings in the main menu.</li> <li>Click the Login tab.</li> <li>Toggle User Registration to ON.</li> <li>Click Save.</li> </ol>"},{"location":"user_guide/user_management/#user-roles","title":"User Roles","text":""},{"location":"user_guide/user_management/#registering-as-a-new-user","title":"Registering as a new user","text":"<p>As a new user, you must complete a registration form to log in for the first time. You add profile information and a password to register. Registration form</p> <p>Important</p> <p>To register -&gt;</p> <ol> <li>Click the Register link on the login page. The registration page is displayed.</li> <li>Enter the user profile information.</li> <li>Enter the new password.</li> <li>Click Save.</li> </ol> <p>More information about the features and functions of gofr can be accessed  in the  User guide </p>"},{"location":"user_guide/user_management/#update-account","title":"Update Account","text":"<p>A user can update their account by Clicking on Account on the Navigator. Some of the details a user can update include:</p>"},{"location":"user_guide/user_management/#edit-account","title":"Edit Account","text":"<p>Here, a user can update their Email, First Name, Last Name and Click Save to record the new details</p> <p></p>"},{"location":"user_guide/user_management/#change-password","title":"Change Password","text":"<p>To update password, key in your New Password, enter the same password in Confirmation and Click Save.</p> <p></p>"},{"location":"user_guide/user_management/#authentication","title":"Authentication","text":"<p>To add authentication on your account,</p> <p>Select  Authenticator -&gt; Follow the instructions to add authentication to your account.</p> <p></p>"}]}